@using Naif.Blog.Models
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers

@model Naif.Blog.UI.ViewModels.BlogViewModel

@{
    string controllerName = ViewContext.ActionDescriptor.RouteValues["controller"];

    var menu = new Menu
    {
        CssClass = "nav nav-pills flex-column",
        IsActiveCssClass = "active",
        Items = new List<MenuItem>
        {
            new MenuItem
            {
                Controller = "Admin",
                Action = "",
                IsActive = (controllerName == "Admin"),
                Text = "Home"
            },
            new MenuItem
            {
                Controller = "Page",
                Action = "List",
                IsActive = (controllerName == "Page"),
                Text = "Pages"
            },
            new MenuItem
            {
                Controller = "Post",
                Action = "List",
                IsActive = (controllerName == "Post"),
                Text = "Posts"
            }
        }
    };
}

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@Model.Blog.Title</title>

    @await Component.InvokeAsync("ClientDependency")

    <link rel="stylesheet" href="~/lib/bootstrap-tagsinput/bootstrap-tagsinput.css" />
    <link rel="stylesheet" href="~/lib/bootstrap-select/css/bootstrap-select.min.css" />
    <link rel="stylesheet" href="~/themes/default/default.css" />

    <script type="text/javascript" src="https://ajax.aspnetcdn.com/ajax/jquery.validate/1.16.0/jquery.validate.min.js"></script>
    <script type="text/javascript" src="https://ajax.aspnetcdn.com/ajax/jquery.validation.unobtrusive/3.2.6/jquery.validate.unobtrusive.min.js"></script>
    <script type="text/javascript" src="~/lib/bootstrap-tagsinput/bootstrap-tagsinput.min.js"></script>
    <script type="text/javascript" src="~/lib/bootstrap-select/js/bootstrap-select.js"></script>
    <script type="text/javascript" src="~/lib/ckeditor/ckeditor.js"></script>
</head>
<body>
<nav class="navbar fixed-top navbar-expand-lg navbar-dark bg-dark" role="navigation">    
    <div class="container">
        <a class="navbar-brand" asp-controller="Post" asp-action="Index">@Model.Blog.Title</a>
        <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarMenu" aria-controls="navbarMenu" aria-expanded="false" aria-label="Toggle navigation">
            <span class="navbar-toggler-icon"></span>
        </button>
        <div class="collapse navbar-collapse justify-content-between" id="navbarMenu">
            @await Component.InvokeAsync("Navigation", new { parent = "0" })
            <ul class="navbar-nav justify-content-end">
                @if (User.Identity.IsAuthenticated)
                {
                    <li class="nav-item"><a asp-controller="Profile" asp-action="Index" class="nav-link">@User.Identity.Name</a></li>
                    <li class="nav-item"><a asp-controller="Account" asp-action="Logout" class="nav-link">Logout</a></li>
                }
            </ul>
        </div>
    </div>
</nav>
<div class="container body-content">
    <div class="row">
        <div id="leftPane" class="col-md-3">
            <h2>Admin Menu</h2>
            @await Component.InvokeAsync("Menu", new{menu = menu})
        </div>
        <div id="mainPane" class="col-md-9">
            @RenderBody()
        </div>
    </div>
    <hr/>
    <footer>
        @await Component.InvokeAsync("Copyright")
    </footer>
</div>
</body>
</html>