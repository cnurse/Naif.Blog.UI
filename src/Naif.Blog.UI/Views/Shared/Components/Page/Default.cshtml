@inject IAuthorizationService AuthorizationService

@using Microsoft.AspNetCore.Authorization
@using Naif.Blog.Models

@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers

@model Page

@{
    var returnUrl = $"/page/{Model.Slug}";
}

<article class="post">
    <header>
        <div class="row">
            <div class="col-md-10">
                <h2>@Model.Title</h2>
            </div>
            <div class="col-md-2">
                @if ((await AuthorizationService.AuthorizeAsync(User, "RequireAdminRole")).Succeeded)
                {
                    <a asp-controller="Page" asp-action="EditPage" asp-route-id="@Model.PageId" asp-route-returnUrl="@returnUrl" class="edit">
                        <span class="fas fa-pencil-alt"></span>
                    </a>
                }
            </div>
        </div>
        <div>
            Category:
            @foreach (var category in Model.Categories)
            {
                <span>@category</span>
            }
        </div>
        <div>
            Tags:
            @foreach (var tag in Model.Tags)
            {
                <span>@tag</span>
            }
        </div>
        <div>Last Modified: @Model.LastModified.ToString("MMM d yyyy")</div>
    </header>
    <div class="info">
        <div class="date">
            <span class="month">@Model.PubDate.ToString("MMM")</span>
            <span class="day">@Model.PubDate.Day</span>
            <span class="year">@Model.PubDate.Year</span>
        </div>
        <div style="clear:both"></div>
    </div>
    <section>@Html.Raw(Model.Content)</section>
</article>