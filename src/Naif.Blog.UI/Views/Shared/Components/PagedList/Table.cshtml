@using Microsoft.AspNetCore.Routing
@using Naif.Blog.Models

@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers

@model Naif.Blog.UI.ViewModels.PagedListViewModel

@{
    var returnUrl = Url.Action("List", Model.IsPage ? "Page" : "Post", new RouteValueDictionary { { "filter", Model.Pager.Filter }, { "page", Model.Pager.PageIndex } });
    var controller = Model.IsPage ? "Page" : "Post";
    var action = Model.IsPage ? "EditPage" : "EditPost";
}

<table class="table table-striped">
    <thead>
        <tr>
            <th>Title</th>
            <th>Category</th>
            <th>Created</th>
            <th>Published</th>
        </tr>
    </thead>
    <tbody>
        @{
            foreach (var post in Model.Posts)
            {
                var id = post.PostId;
                <tr>
                    <td><a asp-controller="@controller" asp-action="@action" asp-route-id="@id" asp-route-returnUrl="@returnUrl">@post.Title</a></td>
                    <td>@string.Join(",", post.Categories)</td>
                    <td>@post.PubDate.ToShortDateString()</td>
                    <td>@post.IsPublished</td>
                </tr>
            }
        }
    </tbody>
</table>

@await Component.InvokeAsync("Pager", new { pager = Model.Pager })

