@using Microsoft.AspNetCore.Mvc.Rendering
@using Naif.Blog.Models;

@model Pager

<footer>
    <ul class="@Model.CssClass">
        @{
            Model.RouteValues["filter"] = Model.Filter;
            var attributes = new Dictionary<string, object> {{"class", "page-link"}};
            if (Model.HasPreviousPage)
            {
                Model.RouteValues["page"] = Model.PageIndex - 1;
                <li class="page-item @Model.PreviousCssClass">@Html.ActionLink(@Model.PreviousText, @Model.Action, @Model.Controller, @Model.RouteValues, attributes)</li>
            }
            for (int i = 1; i < Model.PageCount + 1; i++)
            {
                if (i  == Model.PageIndex + 1)
                {
                    <li class="page-item disabled"><a class="page-link" href="#">@i.ToString()</a></li>
                }
                else
                {
                    Model.RouteValues["page"] = i -1;
                    <li class="page-item">@Html.ActionLink(i.ToString(), @Model.Action, @Model.Controller, @Model.RouteValues, attributes)</li>
                }
            }
            if (Model.HasNextPage)
            {
                Model.RouteValues["page"] = Model.PageIndex + 1;
                <li class="page-item @Model.NextCssClass">@Html.ActionLink(@Model.NextText, @Model.Action, @Model.Controller, @Model.RouteValues, attributes)</li>
            }
        }
    </ul>
</footer>

