@using Naif.Blog.Razor
@using Naif.Blog.Razor.Framework
@using Naif.Blog.Razor.Lists
@using Naif.Blog.UI.ViewModels

@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers

@model Naif.Blog.UI.ViewModels.BlogViewModel

@{
    Layout = "_AdminLayout";
    var postViewModel = Model.Post?.ToPostViewModel();
    var editPostViewModel = new EditPostViewModel()
    {
        ActionUrl = $"/post/list/{Model.PageIndex}/save",
        Messages = Model.Messages,
        PageIndex = Model.PageIndex,
        Post = postViewModel,
        ReturnUrl = Model.ReturnUrl
    };

    var pageState = new PageState { User = Model.User };
    var addUrl = $"/post/list/{Model.PageIndex}/add";
}

<div class="row">
    <div class="col-lg-4">
        <h2>Manage Posts</h2>
        <component type="typeof(PagedPostList)" 
                   render-mode="ServerPrerendered"
                   param-BaseUrl="@Model.BaseUrl"
                   param-Filter="@String.Empty"
                   param-Mode="@ListMode.Table"
                   param-PageCount="20"
                   param-PageIndex="@Model.PageIndex"
                   param-PageState="@pageState"
                   param-Posts="@Model.Posts">
        </component>
    </div>
    <div class="col-lg-8">
        <div class="d-grid gap-2 d-md-flex justify-content-md-end">
            <a role="button" class="btn btn-primary me-md-2 btn-lg" href="@addUrl">Add Post</a>
        </div>
        @if(postViewModel != null)
        {
            if (String.IsNullOrEmpty(Model.Post.Title))
            {
                <h2>Add Post</h2>
            }
            else
            {
                <h2>Edit Post - @Model.Post.Title</h2>
            }
            @await Html.PartialAsync("../Shared/_EditPost.cshtml", editPostViewModel);
        }
    </div>
</div>
