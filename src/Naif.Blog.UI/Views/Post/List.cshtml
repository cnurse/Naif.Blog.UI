@using Naif.Blog.Razor
@using Naif.Blog.Razor.Lists
@using Naif.Blog.UI.ViewModels

@model Naif.Blog.UI.ViewModels.BlogViewModel

@{
    Layout = "_AdminLayout";
    var editPostViewModel = new EditPostViewModel()
    {
        ActionUrl = $"/post/list/{Model.PageIndex}/save",
        Messages = Model.Messages,
        PageIndex = Model.PageIndex,
        Post = Model.Post.ToPostViewModel(),
        ReturnUrl = Model.ReturnUrl
    };

    var addUrl = $"/post/list/{Model.PageIndex}/add";
}

<div class="row">
    <div class="col-lg-4">
        <h2>Manage Posts</h2>
        @(await Html.RenderComponentAsync<PagedPostList>(RenderMode.ServerPrerendered, new
        {
            BaseUrl = Model.BaseUrl,
            Filter = "", 
            PageCount = 20, 
            PageIndex = Model.PageIndex, 
            Posts = Model.Posts,
            Mode = ListMode.Table
        }))
        
    </div>
    <div class="col-lg-8">
        <div class="d-grid gap-2 d-md-flex justify-content-md-end">
            <a role="button" class="btn btn-primary me-md-2 btn-lg" href="@addUrl">Add Post</a>
        </div>
        @if (String.IsNullOrEmpty(Model.Post.Title))
        {
            <h2>Add Post</h2>
        }
        else
        {
            <h2>Edit Post - @Model.Post.Title</h2>
        }
        @await Html.PartialAsync("../Shared/_EditPost.cshtml", editPostViewModel);
    </div>
</div>
